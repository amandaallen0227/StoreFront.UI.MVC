@model StoreFront.UI.MVC.Models.ContactViewModel

@{
    ViewBag.Title = "Contact";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ContactViewModel</h4>
    <div id="content-wrapper">
        <div id="mapwrapper">
            <div id="map"></div>
        </div>
        <section id="contact" class="white">
            <div class="container">
                <div class="gap"></div>
                <div class="row">
                    <div class="col-md-4 fade-up">
                        <h3>Contact Information</h3>
                        <p>
                            <span class="icon icon-home"></span>Time Square, New York<br />
                            <span class="icon icon-phone"></span>+36 65984 405<br />
                            <span class="icon icon-mobile"></span>+36 65984 405<br />
                            <span class="icon icon-envelop"></span> <a href="#">email@infinityteam.com</a> <br />
                            @*<span class="icon icon-twitter"></span> <a href="#">@infinityteam.com</a> <br />*@
                            <span class="icon icon-facebook"></span> <a href="#">Infinity Agency</a> <br />
                        </p>
                    </div><!-- col -->
                    <div class="col-md-8 fade-up">
                        <h3>Drop Us A Message!</h3>
                        <br>
                        <br>
                        <div id="message"></div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <form method="post" action="sendemail.php" id="contactform">
                       
                                <div >
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @*<input type="text" name="name" id="name" placeholder="Name" />*@
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", name = "name", id = "name" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                                <div >
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @*<input type="text" name="email" id="email" placeholder="Email" />*@
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", name = "email", id = "email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                                <div >
                                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @*<input type="text" name="subject" id="subject" placeholder="Subject" />*@
                                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @placeholder = "Subject", name = "subject", id = "subject" } })
                                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                </div>
                                <div >
                                    @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @*<textarea name="message" id="message" placeholder="Message"></textarea>*@
                                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @placeholder = "Message", name = "message", id = "message" } })
                                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                    <input class="btn btn-outlined btn-primary" type="submit" name="submit" value="Submit" />
                                </div>
                          
                        </form>
                    </div><!-- col -->
                </div><!-- row -->
                <div class="gap"></div>
            </div>
        </section>
    </div>
</div>
}
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
